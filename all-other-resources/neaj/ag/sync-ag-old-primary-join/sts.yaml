apiVersion: v1
kind: Service
metadata:
  name: repl
  labels:
    app: repl
spec:
  ports:
  - port: 1433
    name: repl
  - port: 5022
    name: mirror
  clusterIP: None
  selector:
    app: repl
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: repl
spec:
  serviceName: repl
  replicas: 3
  selector:
    matchLabels:
      app: repl
  template:
    metadata:
      labels:
        app: repl
    spec:
      containers:
      - name: repl
        image: sql22:env  # sqlag:ha #tasdidur/mssql-rag:pot #mssql-optimized:vtest #msread:v1 #sqlag2020:v1 #mcr.microsoft.com/mssql/server:2019-latest #jrei/systemd-ubuntu:20.04 #ubuntu:20.04 #
        imagePullPolicy: IfNotPresent
        env:
          - name: ACCEPT_EULA
            value: "Y"
          - name: MSSQL_SA_PASSWORD
            value: "Pa55w0rd!"
          - name: MSSQL_PID
            value: "Developer"
          - name: MSSQL_ENABLE_HADR
            value: "1"
          - name: MSSQL_AGENT_ENABLED	
            value: 'true'
        ports:
        - containerPort: 1433
          name: repl
        - containerPort: 5022
          name: mirror
        volumeMounts:
        - name: mssql
          mountPath: /var/opt/mssql
  volumeClaimTemplates:
  - metadata:
      name: mssql
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 2Gi
      storageClassName: "standard"











# apiVersion: apps/v1
# kind: StatefulSet
# metadata:
#  name: mssql # name of the StatefulSet workload, the SQL Server instance name is derived from this. We suggest to keep this name same as the .spec.template.metadata.labels, .spec.selector.matchLabels and .spec.serviceName to avoid confusion.
# spec:
#  serviceName: "mssql" # serviceName is the name of the service that governs this StatefulSet. This service must exist before the StatefulSet, and is responsible for the network identity of the set.
#  replicas: 1 # only one pod, with one SQL Server instance deployed.
#  selector:
#   matchLabels:
#    app: mssql  # this has to be the same as .spec.template.metadata.labels
#  template:
#   metadata:
#    labels:
#     app: mssql # this has to be the same as .spec.selector.matchLabels, as documented [here](https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/):
#   spec:
#    securityContext:
#      fsGroup: 10001
#    containers:
#    - name: mssql # container name within the pod.
#      image: mcr.microsoft.com/mssql/server:2019-latest
#      ports:
#      - containerPort: 1433
#        name: tcpsql
#      env:
#      - name: ACCEPT_EULA
#        value: "Y"
#      - name: MSSQL_ENABLE_HADR
#        value: "1"
#      - name: MSSQL_AGENT_ENABLED
#        value: "1"
#      - name: MSSQL_SA_PASSWORD
#        valueFrom:
#          secretKeyRef:
#           name: mssql
#           key: MSSQL_SA_PASSWORD
#      volumeMounts:
#      - name: mssql
#        mountPath: "/var/opt/mssql"
#  volumeClaimTemplates:
#    - metadata:
#       name: mssql
#      spec:
#       accessModes:
#       - ReadWriteOnce
#       resources:
#        requests:
#         storage: 8Gi